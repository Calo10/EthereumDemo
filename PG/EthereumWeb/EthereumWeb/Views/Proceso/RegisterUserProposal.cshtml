@model EthereumWeb.Models.HomeModel

@{
    ViewBag.Title = "Asignar propuesta a usuario";
}

<h2>Asignar propuesta a usuario</h2>


@Html.AntiForgeryToken()
@using (Html.BeginForm("RegisterUserProposalSumit", "Proceso"))
{
    <div class="form-horizontal">
        <h4>Separe los correos por ";"</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enviar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Upload", "Proceso", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="file" name="file" />
    <button type="submit">Subir archivo</button>
}
@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="text-success">@ViewBag.Error</div>

}
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
